apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: grafana
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: grafana
    spec:
      initContainers:
      - name: init-chown-data
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["chown", "-R", "472:472", "/var/lib/grafana/plugins"]
        volumeMounts:
        - mountPath: /var/lib/grafana/plugins
          name: grafana-plugins
      containers:
      - name: grafana
        image: grafana/grafana:6.7.2
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
          - name: grafana-server
            mountPath: /etc/grafana/grafana.ini
            subPath: grafana.ini
            readOnly: true
          - name: grafana-datasources
            mountPath: /etc/grafana/provisioning/datasources/
            readOnly: true
          - name: grafana-dashboards
            mountPath: /etc/grafana/provisioning/dashboards/
            readOnly: true
          - name: grafana-plugins
            mountPath: /var/lib/grafana/plugins
        ports:
        - containerPort: 3000
      volumes:
        - name: grafana-datasources
          configMap:
            name: grafana-datasources-conf
        - name: grafana-server
          configMap:
            name: grafana-server-conf
        - name: grafana-dashboards
          projected:
            sources:
            - configMap:
                name: grafana-dashboards-conf
            - configMap:
                name: pihole-dashboard-conf
            - configMap:
                name: infra-dashboard-conf
        - name: grafana-plugins
          hostPath:
            path: /data/grafana/plugins
            type: DirectoryOrCreate
